to="2021-06-02")
atx
source('C:/Users/AlexB/OneDrive/FH/MDS/2_Semester/Finance/Projekt/Finance_Project/Task1_webscraper/task1/R/index_functions.R', echo=TRUE)
library(ABAS)
knitr::opts_chunk$set(echo = TRUE)
library(ABAS)
library(tidyquant)
atx_comp <- getSymbolsOfIndex("ATX")
atx_comp
atx <- atx_comp %>%
tq_get(get="stock.prices",
from="2021-06-01",
to="2021-06-02")
atx
library(ABAS)
library(ABAS)
remove.packages("ABAS", lib="~/R/win-library/4.0")
library(ABAS)
knitr::opts_chunk$set(echo = TRUE)
library(ABAS)
library(tidyquant)
atx_comp <- getSymbolsOfIndex("ATX")
atx_comp
atx <- atx_comp %>%
tq_get(get="stock.prices",
from="2021-06-01",
to="2021-06-02")
atx
str(atx_comp)
index <- "atx"
index <- switch (tolower(index),
"atx" = "ATX",
"smi" = "SSMI",
"dax" = "GDAXI",
"error"
)
if(index=="error"){
stop("Index has to be: ATX, SMI or DAX")
}
pageUrl <- paste("https://finance.yahoo.com/quote/%5E",toupper(index),"/components?p=%5E",toupper(index),sep="")
index_html <- read_html(pageUrl)
tables <- index_html %>% html_table(fill = TRUE)
table_indexes <- tables[[1]]
column_names <-  c("symbol", "company", "last_price", "change", "change_pr", "volume")
colnames(table_indexes) <-  column_names
str(table_indexes)
?getSymbolsOfIndex
library(ABAS)
knitr::opts_chunk$set(echo = TRUE)
atx_comp <- getSymbolsOfIndex("ATX")
atx <- atx_comp %>%
tq_get(get="stock.prices",
from="2021-06-01",
to="2021-06-02")
atx
?getSymbolsOfIndex
remove.packages("ABAS", lib="~/R/win-library/4.0")
library(ABAS)
knitr::opts_chunk$set(echo = TRUE)
library(ABAS)
library(tidyquant)
?getSymbolsOfIndex
knitr::opts_chunk$set(echo = TRUE)
library(ABAS)
library(tidyquant)
?getSymbolsOfIndex
?getSymbolsOfIndex
remove.packages("ABAS", lib="~/R/win-library/4.0")
library(ABAS)
knitr::opts_chunk$set(echo = TRUE)
?getSymbolsOfIndex
library(ABAS)
library(BrucknerStanusic)
knitr::opts_chunk$set(echo = TRUE)
library(BrucknerStanusic)
library(tidyquant)
?getSymbolsOfIndex
atx_comp <- getSymbolsOfIndex("ATX")
atx <- atx_comp %>%
tq_get(get="stock.prices",
from="2021-06-01",
to="2021-06-02")
atx
dax_comp <- getSymbolsOfIndex("DAX")
dax_comp
dax <- dax_comp %>%
tq_get(get="stock.prices",
from="2021-06-01",
to="2021-06-02")
dax
atx
tq_get(atx_comp$symbol,get="stock.prices",
from="2021-06-01",
to="2021-06-02")
atx <- atx_comp %>%
tq_get(get="stock.prices",
from="2021-06-01",
to="2021-06-02")
atx
atx$stock.prices
knitr::opts_chunk$set(
echo = TRUE,
out.width="80%",
fig.align = "center")
suppressPackageStartupMessages(library('tidyquant'))   #install.packages('tidyquant')
suppressPackageStartupMessages(library('tidyverse'))   # for exploratory data analysis & visualisation
holdings_dow   <- tq_index("DOW")   #tq_index('DOWGLOBAL')
holdings_dow   <- tq_index("DOW")   #tq_index('DOWGLOBAL')
holdings_dow
dow <- tq_index("DOW") %>%
tq_get(get="stock.prices",
from ="2021-01-01",
to=)
dow <- tq_index("DOW") %>%
tq_get(get="stock.prices",
from ="2021-01-01",
to="2021-01-03")
dow
dow
holdings_dow
dow <- tq_index("DOW") %>%
tq_get(get="stock.prices",
from ="2021-01-01",
to="2021-01-06")
dow
str(holdings_dow)
atx_comp <- getSymbolsOfIndex("ATX")
atx_comp <- getSymbolsOfIndex("ATX")
atx <- atx_comp %>%
tq_get(get="stock.prices",
from="2021-06-01",
to="2021-06-02")
atx
atx_comp
holdings_dow
dax <- dax_comp$symbol %>%
tq_get(get="stock.prices",
from="2021-06-01",
to="2021-06-02")
dax
str(dax_comp)
str(holdings_dow)
dax <- getSymbolsOfIndex("DAX") %>%
tq_get(get="stock.prices",
from="2021-06-01",
to="2021-06-02")
dax
getAnywhere(tq_index)
getAnywhere(clean_holdings)
library(BrucknerStanusic)
knitr::opts_chunk$set(echo = TRUE)
library(BrucknerStanusic)
library(tidyquant)
atx_comp <- getSymbolsOfIndex("ATX")
atx_comp
atx <- atx_comp %>%
tq_get(get="stock.prices",
from="2021-06-01",
to="2021-06-02")
atx
library(BrucknerStanusic)
knitr::opts_chunk$set(echo = TRUE)
atx_comp <- getSymbolsOfIndex("ATX")
atx_comp
atx <- atx_comp %>%
tq_get(get="stock.prices",
from="2021-06-01",
to="2021-06-02")
atx
library(BrucknerStanusic)
knitr::opts_chunk$set(echo = TRUE)
atx_comp <- getSymbolsOfIndex("ATX")
atx_comp
atx <- atx_comp %>%
tq_get(get="stock.prices",
from="2021-06-01",
to="2021-06-02")
atx
library(BrucknerStanusic)
atx_comp <- getSymbolsOfIndex("ATX")
atx_comp
atx <- atx_comp %>%
tq_get(get="stock.prices",
from="2021-06-01",
to="2021-06-02")
atx
knitr::opts_chunk$set(echo = TRUE)
atx
atx_comp <- getSymbolsOfIndex("ATX")
atx_comp
atx <- atx_comp %>%
tq_get(get="stock.prices",
from="2021-06-01",
to="2021-06-05")
atx
library(BrucknerStanusic)
atx_comp <- getSymbolsOfIndex("ATX")
atx_comp
atx <- atx_comp %>%
tq_get(get="stock.prices",
from="2021-06-01",
to="2021-06-05")
atx
knitr::opts_chunk$set(echo = TRUE)
atx
library(BrucknerStanusic)
knitr::opts_chunk$set(echo = TRUE)
atx_comp <- getSymbolsOfIndex("ATX")
atx_comp
atx <- atx_comp %>%
tq_get(get="stock.prices",
from="2021-06-01",
to="2021-06-05")
atx
library(BrucknerStanusic)
atx_comp <- getSymbolsOfIndex("ATX")
atx_comp
atx <- atx_comp %>%
tq_get(get="stock.prices",
from="2021-06-01",
to="2021-06-05")
atx
knitr::opts_chunk$set(echo = TRUE)
atx
library(BrucknerStanusic)
knitr::opts_chunk$set(echo = TRUE)
atx_comp <- getSymbolsOfIndex("ATX")
atx_comp
atx <- atx_comp %>%
tq_get(get="stock.prices",
from="2021-06-01",
to="2021-06-05")
atx
library(BrucknerStanusic)
temperature <- read_csv("./data/temperature.csv")
temperature %>% tail()
xts_temperature <- xts(x=temperature[, -1], order.by=temperature$datetime)
head(xts_temperature[, 17])
# FILL NA WITH VALUE FORWARD
ts_temperature <- na.locf(xts_temperature, fromLast = TRUE)
ts_temperature <- apply.weekly(ts_temperature,mean)
ts_temperature
plot(decompose(as.ts(ts_temperature)))
library(tidyverse)
library(quantmod)
library(ggplot2)
library(xts)
library(lubridate)
library(tibbletime)
library(timetk)
library(randomForest)
library(caret)
library(e1071)
library(forecast)
library(tidyquant)
#library(rsample)
#library(yardstick)
#library(recipes)
library(keras)
temperature <- read_csv("./data/temperature.csv")
temperature %>% tail()
xts_temperature <- xts(x=temperature[, -1], order.by=temperature$datetime)
head(xts_temperature[, 17])
# FILL NA WITH VALUE FORWARD
ts_temperature <- na.locf(xts_temperature, fromLast = TRUE)
ts_temperature <- apply.weekly(ts_temperature,mean)
ts_temperature <-  ts_temperature - 273.15
ts_temperature <- na.locf(ts_temperature, fromLast = FALSE)
attr(ts_temperature , 'frequency') <- 365/7
sum(is.na(ts_temperature [,17]))
ts_temperature <- ts_temperature$Chicago
plot(ts_temperature, main = "Temperature in Chicago")
plot(decompose(as.ts(ts_temperature)))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidyquant)
library(fpp2)
EBS <- tq_get("EBS.VI",
from = "2010-01-01",
to = "2020-12-31",
periodicity = "monthly")
head(EBS)
closing <- ts(EBS$adjusted,frequency = 12)
volume <- ts(EBS$volume,frequency = 12)
head(closing)
head(volume)
autoplot(closing) +
ggtitle("Erste Bank Stock 2010-2020")+
ylab("Closing Price")
autoplot(log(closing)) +
ggtitle("Erste Bank Stock 2010-2020")+
ylab("Closing Price")
autoplot(volume) +
ggtitle("Erste Bank Volume 2010-2020")+
ylab("Volume")
autoplot(log(volume)) +
ggtitle("Erste Bank Volume 2010-2020")+
ylab("Volume")
ggtsdisplay(closing)
ggtsdisplay(volume)
closing %>% ndiffs()
closing %>% diff(1) %>% ndiffs()
ggtsdisplay(diff(closing))
remove.packages("ABAS", lib="~/R/win-library/4.0")
remove.packages("BrucknerStanusic", lib="~/R/win-library/4.0")
knitr::opts_chunk$set(echo = TRUE)
uname <- readline(prompt="Input your username: ") # enter username as input in the console
devtools::install_git(
"https://git-inf.technikum-wien.at/finance/finance2021/pkgs/brucknerstanusic.git",
credentials = git2r::cred_user_pass(uname, getPass::getPass())
)
devtools::install_git(
"https://git-inf.technikum-wien.at/finance/finance2021/pkgs/brucknerstanusic.git",
credentials = git2r::cred_user_pass(uname, getPass::getPass())
)
install.packages('git2r')
install.packages('getPass')
devtools::install_git(
"https://git-inf.technikum-wien.at/finance/finance2021/pkgs/brucknerstanusic.git",
credentials = git2r::cred_user_pass(uname, getPass::getPass())
)
devtools::install_git(
"https://git-inf.technikum-wien.at/finance/finance2021/pkgs/brucknerstanusic.git",
credentials = git2r::cred_user_pass(uname, getPass::getPass())
)
knitr::opts_chunk$set(echo = TRUE)
uname <- readline(prompt="Input your username: ") # enter username as input in the console
devtools::install_git(
"https://git-inf.technikum-wien.at/finance/finance2021/pkgs/brucknerstanusic.git",
credentials = git2r::cred_user_pass(uname, getPass::getPass())
)
devtools::install_git(
"https://git-inf.technikum-wien.at/finance/finance2021/pkgs/brucknerstanusic.git",
credentials = git2r::cred_user_pass(uname, getPass::getPass())
)
install.packages("processx")
devtools::install_git(
"https://git-inf.technikum-wien.at/finance/finance2021/pkgs/brucknerstanusic.git",
credentials = git2r::cred_user_pass(uname, getPass::getPass())
)
devtools::install_git(
"https://git-inf.technikum-wien.at/finance/finance2021/pkgs/brucknerstanusic.git",
credentials = git2r::cred_user_pass(uname, getPass::getPass())
)
library(abind)
library(AER)
library(alphavantager)
library(anytime)
library(ape)
library(aplpack)
library(arules)
library(tidyverse)
install.packages(c("ape", "arules", "bayestestR", "bitops", "brio", "broom", "bslib", "cachem", "car", "caret", "caTools", "corrplot", "DescTools", "devtools", "diffobj", "dplyr", "DT", "e1071", "effectsize", "ellipsis", "emmeans", "fansi", "forecast", "furrr", "gert", "GGally", "ggeffects", "ggplot2", "ggsignif", "gh", "glmnet", "gtools", "haven", "highfrequency", "httpuv", "insight", "inum", "ks", "later", "lme4", "manipulateWidget", "matrixStats", "mvtnorm", "naniar", "openxlsx", "pander", "parallelly", "parameters", "performance", "pkgload", "plot3D", "plotly", "proxy", "psych", "quantreg", "RcppArmadillo", "recipes", "remotes", "rio", "robustbase", "rsample", "rversions", "sandwich", "sass", "see", "shape", "sjlabelled", "sjmisc", "sjPlot", "statmod", "testthat", "tibble", "tidyverse", "utf8", "vctrs", "viridis", "xfun", "zip"))
install.packages(c("ape", "arules", "bayestestR", "bitops", "brio", "broom", "bslib", "cachem", "car", "caret", "caTools", "corrplot", "DescTools", "devtools", "diffobj", "dplyr", "DT", "e1071", "effectsize", "ellipsis", "emmeans", "fansi", "forecast", "furrr", "gert", "GGally", "ggeffects", "ggplot2", "ggsignif", "gh", "glmnet", "gtools", "haven", "highfrequency", "httpuv", "insight", "inum", "ks", "later", "lme4", "manipulateWidget", "matrixStats", "mvtnorm", "naniar", "openxlsx", "pander", "parallelly", "parameters", "performance", "pkgload", "plot3D", "plotly", "proxy", "psych", "quantreg", "RcppArmadillo", "recipes", "remotes", "rio", "robustbase", "rsample", "rversions", "sandwich", "sass", "see", "shape", "sjlabelled", "sjmisc", "sjPlot", "statmod", "testthat", "tibble", "tidyverse", "utf8", "vctrs", "viridis", "xfun", "zip"))
install.packages(c("ape", "arules", "bayestestR", "bitops", "brio", "broom", "bslib", "cachem", "car", "caret", "caTools", "corrplot", "DescTools", "devtools", "diffobj", "dplyr", "DT", "e1071", "effectsize", "ellipsis", "emmeans", "fansi", "forecast", "furrr", "gert", "GGally", "ggeffects", "ggplot2", "ggsignif", "gh", "glmnet", "gtools", "haven", "highfrequency", "httpuv", "insight", "inum", "ks", "later", "lme4", "manipulateWidget", "matrixStats", "mvtnorm", "naniar", "openxlsx", "pander", "parallelly", "parameters", "performance", "pkgload", "plot3D", "plotly", "proxy", "psych", "quantreg", "RcppArmadillo", "recipes", "remotes", "rio", "robustbase", "rsample", "rversions", "sandwich", "sass", "see", "shape", "sjlabelled", "sjmisc", "sjPlot", "statmod", "testthat", "tibble", "tidyverse", "utf8", "vctrs", "viridis", "xfun", "zip"))
install.packages(c("ape", "arules", "bayestestR", "bitops", "brio", "broom", "bslib", "cachem", "car", "caret", "caTools", "corrplot", "DescTools", "devtools", "diffobj", "dplyr", "DT", "e1071", "effectsize", "ellipsis", "emmeans", "fansi", "forecast", "furrr", "gert", "GGally", "ggeffects", "ggplot2", "ggsignif", "gh", "glmnet", "gtools", "haven", "highfrequency", "httpuv", "insight", "inum", "ks", "later", "lme4", "manipulateWidget", "matrixStats", "mvtnorm", "naniar", "openxlsx", "pander", "parallelly", "parameters", "performance", "pkgload", "plot3D", "plotly", "proxy", "psych", "quantreg", "RcppArmadillo", "recipes", "remotes", "rio", "robustbase", "rsample", "rversions", "sandwich", "sass", "see", "shape", "sjlabelled", "sjmisc", "sjPlot", "statmod", "testthat", "tibble", "tidyverse", "utf8", "vctrs", "viridis", "xfun", "zip"))
install.packages(c("ape", "arules", "bayestestR", "bitops", "brio", "broom", "bslib", "cachem", "car", "caret", "caTools", "corrplot", "DescTools", "devtools", "diffobj", "dplyr", "DT", "e1071", "effectsize", "ellipsis", "emmeans", "fansi", "forecast", "furrr", "gert", "GGally", "ggeffects", "ggplot2", "ggsignif", "gh", "glmnet", "gtools", "haven", "highfrequency", "httpuv", "insight", "inum", "ks", "later", "lme4", "manipulateWidget", "matrixStats", "mvtnorm", "naniar", "openxlsx", "pander", "parallelly", "parameters", "performance", "pkgload", "plot3D", "plotly", "proxy", "psych", "quantreg", "RcppArmadillo", "recipes", "remotes", "rio", "robustbase", "rsample", "rversions", "sandwich", "sass", "see", "shape", "sjlabelled", "sjmisc", "sjPlot", "statmod", "testthat", "tibble", "tidyverse", "utf8", "vctrs", "viridis", "xfun", "zip"))
install.packages(c("ape", "arules", "bayestestR", "bitops", "brio", "broom", "bslib", "cachem", "car", "caret", "caTools", "corrplot", "DescTools", "devtools", "diffobj", "dplyr", "DT", "e1071", "effectsize", "ellipsis", "emmeans", "fansi", "forecast", "furrr", "gert", "GGally", "ggeffects", "ggplot2", "ggsignif", "gh", "glmnet", "gtools", "haven", "highfrequency", "httpuv", "insight", "inum", "ks", "later", "lme4", "manipulateWidget", "matrixStats", "mvtnorm", "naniar", "openxlsx", "pander", "parallelly", "parameters", "performance", "pkgload", "plot3D", "plotly", "proxy", "psych", "quantreg", "RcppArmadillo", "recipes", "remotes", "rio", "robustbase", "rsample", "rversions", "sandwich", "sass", "see", "shape", "sjlabelled", "sjmisc", "sjPlot", "statmod", "testthat", "tibble", "tidyverse", "utf8", "vctrs", "viridis", "xfun", "zip"))
update.packages(ask = FALSE)
update.packages(ask = FALSE)
knitr::opts_chunk$set(echo = TRUE)
uname <- readline(prompt="Input your username: ") # enter username as input in the console
devtools::install_git(
"https://git-inf.technikum-wien.at/finance/finance2021/pkgs/brucknerstanusic.git",
credentials = git2r::cred_user_pass(uname, getPass::getPass())
)
devtools::install_git(
"https://git-inf.technikum-wien.at/finance/finance2021/pkgs/brucknerstanusic.git",
credentials = git2r::cred_user_pass(uname, getPass::getPass())
)
uname <- readline(prompt="Input your username: ") # enter username as input in the console
devtools::install_git(
"https://git-inf.technikum-wien.at/finance/finance2021/pkgs/brucknerstanusic.git",
credentials = git2r::cred_user_pass(uname, getPass::getPass())
)
uname <- readline(prompt="Input your username: ") # enter username as input in the console
uname
devtools::install_git(
"https://git-inf.technikum-wien.at/finance/finance2021/pkgs/brucknerstanusic.git",
credentials = git2r::cred_user_pass(uname, getPass::getPass())
)
devtools::install_git(
"https://git-inf.technikum-wien.at/finance/finance2021/pkgs/brucknerstanusic.git",
credentials = git2r::cred_user_pass(uname, getPass::getPass())
)
devtools::install_git(
"https://git-inf.technikum-wien.at/finance/finance2021/pkgs/brucknerstanusic.git",
credentials = git2r::cred_user_pass(uname, getPass::getPass())
)
install.packages("rtools")
install.packages("RTools")
devtools::install_git(
"https://git-inf.technikum-wien.at/finance/finance2021/pkgs/brucknerstanusic.git",
credentials = git2r::cred_user_pass(uname, getPass::getPass())
)
library(BrucknerStanusic)
knitr::opts_chunk$set(echo = TRUE)
uname <- readline(prompt="Input your username: ") # enter username as input in the console
devtools::install_git(
"https://git-inf.technikum-wien.at/finance/finance2021/pkgs/brucknerstanusic.git",
credentials = git2r::cred_user_pass(uname, getPass::getPass())
)
devtools::install_git(
"http://git-inf.technikum-wien.at/finance/finance2021/pkgs/brucknerstanusic.git",
credentials = git2r::cred_user_pass(uname, getPass::getPass())
)
devtools::install_git(
"https://git-inf.technikum-wien.at/finance/finance2021/pkgs/brucknerstanusic.git",
credentials = git2r::cred_user_pass("ds20m002", "Pa$$w0rt")
)
remove.packages("BrucknerStanusic", lib="~/R/win-library/4.0")
knitr::opts_chunk$set(echo = TRUE)
uname <- readline(prompt="Input your username: ") # enter username as input in the console
devtools::install_git(
"https://git-inf.technikum-wien.at/finance/finance2021/pkgs/brucknerstanusic.git",
credentials = git2r::cred_user_pass(uname, getPass::getPass())
)
getAnywhere(install_git)
getAnywhere(install_git)[]
getAnywhere(install_git)[1]
knitr::opts_chunk$set(echo = TRUE)
uname <- readline(prompt="Input your username: ") # enter username as input in the console
devtools::install_git(
"https://git-inf.technikum-wien.at/finance/finance2021/pkgs/brucknerstanusic.git",
credentials = git2r::cred_user_pass(uname, getPass::getPass())
)
?install_git
install.packages("devtools")
install.packages("devtools")
knitr::opts_chunk$set(echo = TRUE)
uname <- readline(prompt="Input your username: ") # enter username as input in the console
knitr::opts_chunk$set(echo = TRUE)
uname <- readline(prompt="Input your username: ") # enter username as input in the console
devtools::install_git(
"https://git-inf.technikum-wien.at/finance/finance2021/pkgs/brucknerstanusic.git",
credentials = git2r::cred_user_pass(uname, getPass::getPass())
)
devtools::install_git(
"https://git-inf.technikum-wien.at/finance/finance2021/pkgs/brucknerstanusic",
credentials = git2r::cred_user_pass(uname, getPass::getPass())
)
devtools::install_gitlab(
"https://git-inf.technikum-wien.at/finance/finance2021/pkgs/brucknerstanusic.git",
credentials = git2r::cred_user_pass(uname, getPass::getPass())
)
devtools::install_gitlab(
"https://git-inf.technikum-wien.at/finance/finance2021/pkgs/brucknerstanusic.git",
credentials = git2r::cred_user_pass(uname, getPass::getPass(), force=TRUE)
)
devtools::install_git(
"https://git-inf.technikum-wien.at/finance/finance2021/pkgs/brucknerstanusic.git",
credentials = git2r::cred_user_pass(uname, getPass::getPass(), force=TRUE)
)
devtools::install_git(
"https://git-inf.technikum-wien.at/finance/finance2021/pkgs/brucknerstanusic.git",
credentials = git2r::cred_user_pass(uname, getPass::getPass())
)
remove.packages("devtools", lib="~/R/win-library/4.0")
install.packages("devtools")
install.packages("devtools")
knitr::opts_chunk$set(echo = TRUE)
devtools::install_git(
"https://git-inf.technikum-wien.at/finance/finance2021/pkgs/brucknerstanusic.git",
credentials = git2r::cred_user_pass(uname, getPass::getPass())
)
devtools::install_git(
"https://git-inf.technikum-wien.at/finance/finance2021/pkgs/brucknerstanusic.git",
credentials = git2r::cred_user_pass(uname, getPass::getPass())
)
library(BrucknerStanusic)
knitr::opts_chunk$set(echo = TRUE)
library(BrucknerStanusic)
library(tidyquant)
atx_comp <- getSymbolsOfIndex("ATX")
atx_comp
atx <- atx_comp %>%
tq_get(get="stock.prices",
from="2021-06-01",
to="2021-06-03")
atx
devtools::install_git(
"https://git-inf.technikum-wien.at/finance/finance2021/pkgs/brucknerstanusic.git",
credentials = git2r::cred_user_pass(uname, getPass::getPass())
)
library(BrucknerStanusic)
knitr::opts_chunk$set(echo = TRUE)
library(BrucknerStanusic)
library(tidyquant)
atx_comp <- getSymbolsOfIndex("ATX")
atx_comp
atx <- atx_comp %>%
tq_get(get="stock.prices",
from="2021-06-01",
to="2021-06-03")
atx
temperature <- read_csv("./data/temperature.csv")
library(tidyverse)
library(quantmod)
library(ggplot2)
library(xts)
library(lubridate)
library(tibbletime)
library(timetk)
library(randomForest)
library(caret)
library(e1071)
library(forecast)
library(tidyquant)
library(keras)
temperature <- read_csv("./data/temperature.csv")
xts_temperature <- xts(x=temperature[, -1], order.by=temperature$datetime)
head(xts_temperature[, 17])
